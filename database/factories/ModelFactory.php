<?php
/**
 * Copyright (c) 2017.
 *
 * @author Alexander Zagovorichev <zagovorichev@gmail.com>
 */

/** @var \Illuminate\Database\Eloquent\Factory $factory */
$factory->define(App\User::class, function (Faker\Generator $faker) {
    static $password;

    return [
        'name' => $faker->name,
        'email' => $faker->unique()->safeEmail,
        'password' => $password ?: $password = bcrypt('secret'),
        'remember_token' => str_random(10),
    ];
});

$factory->define(\App\Role::class, function () {
    return [
        'title' => \App\Role::ROLE_LOGIN,
    ];
});

$factory->define(\App\Doctor::class, function (\Faker\Generator $faker) {

    return [
        'name' => $faker->name,
        'description' => $faker->text(),
        'ref_key' => str_random(3),
    ];
});

$factory->define(\App\Document::class, function (\Faker\Generator $faker) {

    return [
        // mock for user
        'created_by' => 1,
        'title' => $faker->title,
    ];
});

$factory->define(\App\Assistant::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(120),
        'ref_key' => str_random(3),
        'email' => $faker->email,
        'comment' => $faker->text(200),
    ];
});

$factory->define(\App\AccidentCheckpoint::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(120),
        'description' => $faker->text(),
    ];
});

$factory->define(\App\Form::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(20),
        'description' => $faker->text(200),
        'template' => '<p>Hello :firstName, :lastName</p><p>Some text in here with :param</p>',
        'variables' => 'firstName,lastName,param',
        'formable_type' => \App\Accident::class,
    ];
});

$factory->define(\App\FormReport::class, function (\Faker\Generator $faker) {

    return [
        'form_id' => function () {
            return factory(\App\Form::class)->create([
                'title' => 'Accident Report Form',
                'description' => 'Form has been generated by ModelFactory for FormReport',
                'template' => '<p>Form for :className</p><p>Generated by <b>:generatorName</b></p>',
                'variables' => 'className,generatorName',
            ])->id;
        },
        'values' => json_encode(['className' => \App\FormReport::class, 'generatorName' => 'ModelFactory']),
    ];
});

$factory->define(\App\DiagnosticCategory::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(70),
    ];
});

$factory->define(\App\Diagnostic::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(20),
        'description' => $faker->text(),
        'diagnostic_category_id' => function () {
            return factory(\App\DiagnosticCategory::class)->create()->id;
        }
    ];
});

$factory->define(\App\City::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->city,
    ];
});

$factory->define(\App\Patient::class, function (\Faker\Generator $faker) {

    return [
        'name' => $faker->firstName . ' ' . $faker->lastName,
        'address' => $faker->address,
        'phones' => $faker->phoneNumber,
        'birthday' => $faker->date(),
        'comment' => $faker->paragraphs(2, true),
    ];
});

$factory->define(\App\DoctorService::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(20),
        'description' => $faker->text(),
        'price' => $faker->randomFloat(2, 0, 10000),
    ];
});

$factory->define(\App\AccidentType::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(20),
        'description' => $faker->text(),
    ];
});

$factory->define(\App\AccidentStatus::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(20),
        'description' => $faker->paragraphs(2, true),
        'caseable_type' => $faker->text(20),
    ];
});

$factory->define(\App\DoctorAccident::class, function (\Faker\Generator $faker) {

    return [
        'doctor_id' => $faker->numberBetween(1, 10),
        'city_id' => $faker->numberBetween(1, 10),
        'status' => \App\DoctorAccident::STATUS_NEW,
        'diagnose' => $faker->paragraphs(3, true),
        'investigation' => $faker->paragraphs(3, true),
        'accident_status_id' => function () {
            return factory(\App\AccidentStatus::class)->create()->id;
        },
        'visit_time' => new DateTime(),
    ];
});

$factory->define(\App\Accident::class, function (\Faker\Generator $faker) {

    return [
        'created_by' => function () {
            return factory(\App\User::class)->create()->id;
        },
        'parent_id' => 0,
        'patient_id' => function () {
            return factory(\App\Patient::class)->create()->id;
        },
        'accident_type_id' => function () {
            return factory(\App\AccidentType::class)->create()->id;
        },
        'accident_status_id' => function () {
            return factory(\App\AccidentStatus::class)->create()->id;
        },
        'assistant_id' => function () {
            return factory(\App\Assistant::class)->create()->id;
        },
        'assistant_ref_num' => $faker->text(20),
        'caseable_id' => function () {
            return factory(\App\DoctorAccident::class)->create()->id;
        },
        'caseable_type' => \App\DoctorAccident::class,
        'ref_num' => $faker->text(10),
        'title' => $faker->text(30),
        'city_id' => function () {
            return factory(\App\City::class)->create()->id;
        },
        'address' => $faker->address,
        'contacts' => $faker->company . "\n" . $faker->companyEmail . "\n" . $faker->phoneNumber,
        'symptoms' => $faker->paragraphs(4, true),
    ];
});

$factory->define(\App\AccidentStatusHistory::class, function (\Faker\Generator $faker) {

    return [
        'commentary' => $faker->text(20),
        'historyable_id' => function () {
            // could be each of accident Doctor_Accident Accident Hospital_Accident ...
            return factory(\App\Accident::class)->create()->id;
        },
        'historyable_type' => \App\Accident::class,
    ];
});

$factory->define(\App\Hospital::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(30),
        'description' => $faker->text(),
        'ref_key' => str_random(2),
        'address' => $faker->address,
        'phones' => $faker->phoneNumber.','.$faker->phoneNumber,
    ];
});

$factory->define(\App\Comment::class, function (\Faker\Generator $faker) {

    return [
        'created_by' => function () {
            return factory(\App\User::class)->create()->id;
        },
        'text' => $faker->paragraphs(3, true),
        'commentable_type' => \App\Accident::class,
        'commentable_id' => function () {
            return factory(\App\Accident::class)->create()->id;
        },
    ];
});

$factory->define(\App\Invoice::class, function (\Faker\Generator $faker) {

    return [
        'created_by' => function () {
            return factory(\App\User::class)->create()->id;
        },
        'title' => $faker->text(30),
        'price' => $faker->randomFloat(2, 0, 50000),
    ];
});


$factory->define(\App\Guarantee::class, function (\Faker\Generator $faker) {

    return [
        'title' => $faker->text(30),
        'form_report_id' => function () {
            return factory(\App\FormReport::class)->create()->id;
        },
        'status' => 'new',
    ];
});

